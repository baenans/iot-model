/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Mon Nov 26 11:37:24 2018. */

#ifndef PB_PB_SENSOREVENT_PB_H_INCLUDED
#define PB_PB_SENSOREVENT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _pb_SensorEvent {
    int32_t deviceId;
    int32_t timestamp;
    float humidity;
    float temperature;
/* @@protoc_insertion_point(struct:pb_SensorEvent) */
} pb_SensorEvent;

/* Default values for struct fields */

/* Initializer values for message structs */
#define pb_SensorEvent_init_default              {0, 0, 0, 0}
#define pb_SensorEvent_init_zero                 {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pb_SensorEvent_deviceId_tag              1
#define pb_SensorEvent_timestamp_tag             2
#define pb_SensorEvent_humidity_tag              3
#define pb_SensorEvent_temperature_tag           4

/* Struct field encoding specification for nanopb */
extern const pb_field_t pb_SensorEvent_fields[5];

/* Maximum encoded size of messages (where known) */
#define pb_SensorEvent_size                      32

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SENSOREVENT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
