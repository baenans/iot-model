/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Sun Dec  2 12:58:17 2018. */

#ifndef PB_PB_RGBLEDSTATUS_PB_H_INCLUDED
#define PB_PB_RGBLEDSTATUS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _pb_RGBLedStatus {
    int32_t red;
    int32_t green;
    int32_t blue;
/* @@protoc_insertion_point(struct:pb_RGBLedStatus) */
} pb_RGBLedStatus;

/* Default values for struct fields */

/* Initializer values for message structs */
#define pb_RGBLedStatus_init_default             {0, 0, 0}
#define pb_RGBLedStatus_init_zero                {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pb_RGBLedStatus_red_tag                  1
#define pb_RGBLedStatus_green_tag                2
#define pb_RGBLedStatus_blue_tag                 3

/* Struct field encoding specification for nanopb */
extern const pb_field_t pb_RGBLedStatus_fields[4];

/* Maximum encoded size of messages (where known) */
#define pb_RGBLedStatus_size                     33

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define RGBLEDSTATUS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
